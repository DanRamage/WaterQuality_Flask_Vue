<template>
    <b-container fluid>
        <b-row class="h-100">
            <b-col cols="12" ref="map_column" class="padding-0">
                <b-button v-b-toggle.info-sidebar class="sidebar-button">i</b-button>
                <b-sidebar id="info-sidebar" shadow>
                    <div class="px-3 py-2 montserat-font text-white blue-background_color sidebar-opacity">
                        <h6><span v-text="title"></span></h6>
                        <h4><span v-text="site_name"></span></h4>
                        <p class="text-left">
                            Bacteria levels can change rapidly between sampling dates. To fill in the gaps,
                            we make daily <b>Nowcast</b> of bacteria conditions. These predictions do not represent
                            swimming advisories, but provide estimates of the likelihood that bacteria conditions
                            would warrant issuing an advisory if sampling were conducted that day.
                        </p>
                        <b-button-group>
                            <b-button class="type-btn-outline-primary p-2" variant="outline-primary">Forecast</b-button>
                            <b-button class="type-btn-outline-primary p-2" variant="outline-primary">Advisory</b-button>
                        </b-button-group>
                        <p class="text-center">
                            <a href="#" class="text-white card-link">Bacteria Sources</a>
                        </p>
                        <p class="text-center">
                            <a href="#" class="text-white card-link">Locations</a>
                        </p>
                        <p class="text-center">
                            <a href="#" class="text-white card-link">About</a>
                        </p>
                    </div>
            </b-sidebar>
            <vl-map style="height: 400px" ref="site_map" :load-tiles-while-animating="true" :load-tiles-while-interacting="true" data-projection="EPSG:4326">
                <vl-view :center.sync="center" :rotation.sync="rotation"></vl-view>
                <vl-layer-tile>
                    <vl-source-xyz :url="layer_url" attributions="string or array" />
                </vl-layer-tile>
                <vl-layer-vector>
                    <vl-source-vector ref="site_vector_layer" :features.sync="features"></vl-source-vector>
                    <vl-style-box>
                        <vl-style-circle :radius="3">
                            <vl-style-fill color="white"></vl-style-fill>
                            <vl-style-stroke color="red"></vl-style-stroke>
                        </vl-style-circle>
                    </vl-style-box>
                </vl-layer-vector>
            </vl-map>
        </b-col>
        </b-row>

    </b-container>
</template>

<script>
    import DataAPI from "../utilities/rest_api";
    //import * as OLExtent from "ol/extent"
    export default {
        name: 'OLMapPage',

        data () {
            return {
                title: "HOW'S THE BEACH",
                site_name: "",
                zoom: 5,
                center: [0,0],
                rotation: 0,
                features: [],
                loading: false,
                layer_url: 'http://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}'
                //extent: undefined
            }
        },
        mounted () {
            let vm = this;
            this.loading = true;
            let path = window.location.pathname;
            if (path.length) {
                let sitename = path.split('/');
                this.site_name = sitename[1];

                console.debug("Retrieving initial site: " +  this.site_name + " data.")
                DataAPI.GetSitesPromise(this.site_name, '').then(features => {
                    vm.features = features.data.features;
                    vm.loading =  false;
                    vm.$nextTick(function() {
                        console.debug("nextTick mounted setting map extent.");
                        vm.$refs.site_map.$map.updateSize();
                        let extent = vm.$refs.site_vector_layer.$source.getExtent();
                        let m_size  = vm.$refs.site_map.$map.getSize();
                        vm.$refs.site_map.getView().fit(extent, m_size);
                    });
                })
                    .catch(error => console.error(error));

            }
        },
        methods: {
        }
    }
</script>
<style scoped>
    .sidebar-button {
        position: relative;
        z-index: 1000;
        top: 7em;
        left: .75em;
    }
    .montserat-font {
        font-family: 'Montserrat';

    }
    .sidebar-opacity {
        opacity: 0.9;
    }
    .blue-background_color {
        background-color: rgba(0, 61, 126, .85);
    }
    .swimmer-icon {
        width: 25px;
        height: 25px;
    }
    .padding-0{
        padding-right:0;
        padding-left:0;
    }
    .type-btn-outline-primary {

        color: #FFFFFF;
        border-color: #FFFFFF;
    }
</style>
